name: Merge main into production

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "yes master" to confirm merge'
        required: true
      strategy:
        description: 'Merge strategy (merge, rebase, ours)'
        required: false
        default: 'merge'

jobs:
  merge:
    if: ${{ github.event.inputs.confirm == 'yes master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0  # Fetch all history for all branches
          token: ${{ secrets.PAT_TOKEN }}  # Use PAT instead of GITHUB_TOKEN

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
      
      - name: Attempt merge with selected strategy
        id: merge_attempt
        continue-on-error: true
        run: |
          git fetch origin production
          git checkout production
          
          # Apply different merge strategies based on input
          if [[ "${{ github.event.inputs.strategy }}" == "rebase" ]]; then
            echo "Using rebase strategy"
            git rebase origin/main
          elif [[ "${{ github.event.inputs.strategy }}" == "ours" ]]; then
            echo "Using 'ours' strategy"
            git merge origin/main -X ours -m "chore: merge main into production [skip ci]"
          else
            echo "Using standard merge strategy"
            git merge origin/main --allow-unrelated-histories -m "chore: merge main into production [skip ci]"
          fi
      
      - name: Check if merge succeeded
        if: steps.merge_attempt.outcome == 'success'
        run: |
          # Use PAT_TOKEN for pushing
          git remote set-url origin https://${{ github.actor }}:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin production
      
      - name: Handle merge conflicts
        if: steps.merge_attempt.outcome == 'failure'
        run: |
          echo "::warning::Merge conflict detected. Providing details about conflicts:"
          git status
          git diff --name-only --diff-filter=U
          echo "Please resolve these conflicts manually or choose a different merge strategy."
          exit 1
